{
    "openapi": "3.0.0",
    "info": {
        "title": "AuAPI",
        "description": "This is a collection of endpoints, which can be used to interact with and read information about AuStation SS13 servers.<br>For support, contact Terra#4852 directly on Discord, or through [AuStation's Discord server](https://discord.gg/ZTGQAqB)<br>Source code for this API can be found on [GitHub](https://github.com/austation/auapi)",
        "license": {
            "name": "MIT",
            "url": "https://mit-license.org"
        },
        "version": "0.4.2"
    },
    "servers": [
        {
            "url": "https://api.austation.net",
            "description": "AuStation API"
        }
    ],
    "paths": {
        "/version": {
            "get": {
                "tags": [
                    "API"
                ],
                "summary": "Get current API version",
                "description": "Returns an object with the current API version",
                "operationId": "getApiVersion",
                "responses": {
                    "200": {
                        "description": "Current API Version",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/version"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bans": {
            "get": {
                "tags": [
                    "Bans"
                ],
                "summary": "Get a list of bans from the database, based on given parameters",
                "description": "Returns an object containing a list of bans, along with metadata about the response.",
                "operationId": "getBans",
                "parameters": [
                    {
                        "name": "ckey",
                        "in": "query",
                        "description": "Key of banned player to search for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "a_ckey",
                        "in": "query",
                        "description": "Key of the banning admin to search for",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "description": "Select bans after the given ID (inclusive)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "description": "Select bans before the given ID (inclusive)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of bans per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Selects which page to retrieve",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "reverse",
                        "in": "query",
                        "description": "Whether bans should be retrieved in reverse order (oldest->newest)",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Collection of bans along with metadata about the results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total_rows": {
                                            "description": "Total number of bans that matched given criteria",
                                            "type": "number",
                                            "format": "int32"
                                        },
                                        "rows": {
                                            "description": "Number of bans in the current page",
                                            "type": "number",
                                            "format": "int32"
                                        },
                                        "pages": {
                                            "description": "Number of pages available for selection",
                                            "type": "number",
                                            "format": "int32"
                                        },
                                        "bans": {
                                            "description": "Array of ban objects retrieved",
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ban"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/server/{id}/status": {
            "get": {
                "tags": [
                    "Server"
                ],
                "summary": "Get the status of a server",
                "description": "Returns a detailed description of the current status of a server, depending on the server ID given.",
                "operationId": "getStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of server to fetch status for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status data for the target server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/status"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Server ID doesn't exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/server/{id}/players": {
            "get": {
                "tags": [
                    "Server"
                ],
                "summary": "Get a list of players currently on the server",
                "description": "Returns a list of ckeys currently logged into the server.",
                "operationId": "getPlayers",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of server to fetch player list from",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Player list from the target server",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Server ID doesn't exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/servers": {
            "get": {
                "tags": [
                    "Server"
                ],
                "summary": "Get a list of servers registered with the API",
                "description": "Returns an array of the current servers the API is configured to interface with, including IP and port.",
                "operationId": "getServers",
                "responses": {
                    "200": {
                        "description": "List of registered servers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/server"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/error"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "status": {
                "required": [
                    "version",
                    "mode",
                    "respawn",
                    "enter",
                    "vote",
                    "ai",
                    "host",
                    "round_id",
                    "players",
                    "revision",
                    "revision_date",
                    "hub",
                    "admins",
                    "gamestate",
                    "map_name",
                    "security_level",
                    "round_duration",
                    "time_dilation_current",
                    "time_dilation_avg",
                    "time_dilation_avg_fast",
                    "time_dilation_avg_slow",
                    "soft_popcap",
                    "hard_popcap",
                    "extreme_popcap",
                    "popcap"
                ],
                "properties": {
                    "version": {
                        "description": "String specifying server codebase version",
                        "type": "string"
                    },
                    "mode": {
                        "description": "Currently active gamemode on the server",
                        "type": "string"
                    },
                    "respawn": {
                        "description": "Whether respawning is enabled",
                        "type": "boolean"
                    },
                    "enter": {
                        "description": "Whether new players can enter the game",
                        "type": "boolean"
                    },
                    "vote": {
                        "description": "Whether players can create votes",
                        "type": "boolean"
                    },
                    "ai": {
                        "description": "Whether the AI job is enabled",
                        "type": "boolean"
                    },
                    "host": {
                        "description": "Name of the server host",
                        "type": "string"
                    },
                    "round_id": {
                        "description": "Current round ID",
                        "type": "integer"
                    },
                    "players": {
                        "description": "Number of players online",
                        "type": "integer"
                    },
                    "revision": {
                        "description": "Currently running Git revision (commit)",
                        "type": "string"
                    },
                    "revision_date": {
                        "description": "Date of currently running Git revision (commit)",
                        "type": "string"
                    },
                    "hub": {
                        "description": "Whether the server is listed on the BYOND hub",
                        "type": "boolean"
                    },
                    "admins": {
                        "description": "Current number of online admins",
                        "type": "integer"
                    },
                    "gamestate": {
                        "description": "Indicates the current state of the game: 0 = Server Starting, 1 = Pregame Lobby, 2 = Starting Game, 3 = Game Running (Playing), 4 = Round Over",
                        "type": "integer"
                    },
                    "map_name": {
                        "description": "Currently active map",
                        "type": "string"
                    },
                    "security_level": {
                        "description": "Current security level (can be \"green\", \"blue\", \"red\" or \"delta\")",
                        "type": "string"
                    },
                    "round_duration": {
                        "description": "Time the round has been running, in seconds",
                        "type": "integer"
                    },
                    "time_dilation_current": {
                        "description": "Current server time dilation (percentage)",
                        "type": "number",
                        "format": "float"
                    },
                    "time_dilation_avg": {
                        "description": "Averaged time dilation",
                        "type": "number",
                        "format": "float"
                    },
                    "time_dilation_avg_slow": {
                        "description": "Averaged time dilation over a longer period",
                        "type": "number",
                        "format": "float"
                    },
                    "time_dilation_avg_fast": {
                        "description": "Averaged time dilation over a shorter period",
                        "type": "number",
                        "format": "float"
                    },
                    "soft_popcap": {
                        "description": "Number of living players at which new players will receive a warning about high population",
                        "type": "integer"
                    },
                    "hard_popcap": {
                        "description": "Number of living players at which new players will be unable to spawn on the station",
                        "type": "integer"
                    },
                    "extreme_popcap": {
                        "description": "Number of living players at which players will be unable to join the server at all",
                        "type": "integer"
                    },
                    "popcap": {
                        "description": "General value which is the maximum of soft, hard and extreme popcap values",
                        "type": "integer"
                    },
                    "shuttle_mode": {
                        "description": "Current state of the emergency shuttle: \"idle, \"igniting\", \"recalled\", \"called\", \"docked\", \"stranded\", \"escape\", \"endgame: game over\", \"recharging\", \"landing\"",
                        "type": "string"
                    },
                    "shuttle_timer": {
                        "description": "Current time left until the emergency shuttle completes its current operation",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "version": {
                "required": [
                    "version"
                ],
                "properties": {
                    "version": {
                        "description": "SemVer 2.0.0 string denoting current API version",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "server": {
                "required": [
                    "id",
                    "name",
                    "ip",
                    "port"
                ],
                "properties": {
                    "id": {
                        "description": "Numeric identifier for the server, used to access API endpoints",
                        "type": "number",
                        "format": "int32"
                    },
                    "name": {
                        "description": "Human-readable name of the server",
                        "type": "string"
                    },
                    "ip": {
                        "description": "IP address the server is live at",
                        "type": "string"
                    },
                    "port": {
                        "description": "Port the server is running on",
                        "type": "number",
                        "format": "int32"
                    }
                },
                "type": "object"
            },
            "error": {
                "required": [
                    "error"
                ],
                "properties": {
                    "error": {
                        "description": "Simple string describing the error",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ban": {
                "required": [
                    "id",
                    "bantime",
                    "round_id",
                    "role",
                    "expiration_time",
                    "reason",
                    "ckey",
                    "a_ckey",
                    "unbanned_datetime",
                    "unbanned_ckey",
                    "unbanned_round_id",
                    "server_name",
                    "global_ban"
                ],
                "properties": {
                    "id": {
                        "description": "Numeric ID for the ban",
                        "type": "number",
                        "format": "int32"
                    },
                    "bantime": {
                        "description": "Timestamp for when the ban was applied as 'YYYY-MM-DD HH:MM:SS' Timestamp in 24 hour format",
                        "type": "string"
                    },
                    "round_id": {
                        "description": "Round ID when the ban was applied",
                        "type": "number",
                        "format": "int32"
                    },
                    "role": {
                        "description": "Role the ban is for",
                        "type": "string"
                    },
                    "expiration_time": {
                        "description": "Timestamp for when the ban will expire. NULL if permanent",
                        "type": "string"
                    },
                    "reason": {
                        "description": "Admin-provided reason the ban was applied",
                        "type": "string"
                    },
                    "ckey": {
                        "description": "Player key the ban applies to",
                        "type": "string"
                    },
                    "a_ckey": {
                        "description": "Key of the banning admin",
                        "type": "string"
                    },
                    "unbanned_datetime": {
                        "description": "Timestamp for when the ban was removed. NULL if ban still active",
                        "type": "string"
                    },
                    "unbanned_ckey": {
                        "description": "Key of the unbanning admin. NULL if ban still active",
                        "type": "string"
                    },
                    "unbanned_round_id": {
                        "description": "Round ID when the ban was removed. NULL if ban still active",
                        "type": "number",
                        "format": "int32"
                    },
                    "server_name": {
                        "description": "Name of the server the player was banned on",
                        "type": "string"
                    },
                    "global_ban": {
                        "description": "Whether the ban applies to all servers sharing the database (0 or 1)",
                        "type": "number",
                        "format": "int32"
                    }
                },
                "type": "object"
            }
        }
    }
}